@page "/customers"
@using DemoProducts.Data
@using DemoProducts.Repository

@inject ICustomerRepository CustomerRepository


<button class="btn btn-primary mr-auto" @onclick="() => ShowCustomerDialog(0)">+Add Customer</button>
<br/>
<br/>


@if (isLoading)
{
    <div class="text-center">
        <img src="/images/loading.gif">
    </div>
}
else
{
    <div style="overflow-x:auto;">
        <table class="table table-striped table-hover">
            <thead>
            <tr>
                <th>Company</th>
                <th>Contact Name</th>
                <th>Phone Number</th>
                <th>Email Address</th>
                <th>Address</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var customer in CustomerList)
            {
                tempAddress
                    = customer.Street + ", "
                      + customer.City + ", "
                      + customer.State + " "
                      + customer.ZipCode;

                <tr>
                    <td>@customer.CompanyName</td>
                    <td>@customer.ContactName</td>
                    <td>@customer.PhoneNumber</td>
                    <td>@customer.EmailAddress</td>
                    <td word-wrap:break-word>@tempAddress</td>
                    <td>
                        <button class="btn btn-secondary" @onclick="() => { ShowCustomerDialog(customer.Id);}">Edit</button>
                        <button class="btn btn-danger" @onclick="() => { ShowDeleteDialog(customer.Id);}">Delete</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <br/>
}

@if (showCustomerDialog)
{
    <_CustomerDialog OnClose="@CloseCustomerDialog" Id="currentId"></_CustomerDialog>
}
else if (showDeleteDialog)
{
    <_ConfirmDialog
        PrimaryButtonClicked="ConfirmDeleteClick"
        HeaderTitle="Delete Confirmation"
        BodyMessage="Are you sure you want to delete?"
        PrimaryButtonTitle="Delete"
        SecondaryButtonTitle="Cancel"
        >
    </_ConfirmDialog>
}

@code {

    private int currentId = 0;
    private string tempAddress = "";
    private bool showCustomerDialog = false;
    private bool showDeleteDialog = false;
    private bool isLoading { get; set; }
    private IEnumerable<CustomerDto> CustomerList { get; set; } = new List<CustomerDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCustomersAsync();
        }
    }

    private async Task LoadCustomersAsync()
    {
        isLoading = true;
        StateHasChanged();
        CustomerList = await CustomerRepository.GetAllAsync();
        isLoading = false;
        StateHasChanged();
    }

    private void ShowCustomerDialog(int id)
    {
        currentId = id;
        showCustomerDialog = true;
    }
    
    private void CloseCustomerDialog()
    {
        showCustomerDialog = false;
        LoadCustomersAsync();
    }

    private void ShowDeleteDialog(int id)
    {
        currentId = id;
        showDeleteDialog = true;
    }

    private void CloseDeleteDialog()
    {
        showDeleteDialog = false;
        LoadCustomersAsync();
    }
    
    private async Task ConfirmDeleteClick(bool isDelete)
    {
        if (isDelete)
            await CustomerRepository.DeleteAsync(currentId);
        
        CloseDeleteDialog();
    }

}